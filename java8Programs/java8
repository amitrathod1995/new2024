
how to remove duplicates using java8 stream Api?

import java.util.stream.*;
import java.util.*;

class HelloWorld {
    public static void main(String[] args) {
      


        Set<Integer>set =list.stream().collect(Collectors.toSet());
        System.out.println(set);
        
       List<Integer> lis = list.stream()
                .distinct()
              .collect(Collectors.toList());

        System.out.println("Unique numbers: " + lis);
        
    }
}      
     Output:- [1, 2, 3, 4, 5]
              Unique numbers: [1, 2, 3, 4, 5]



How to create immutable class in java?
final class Person {
    private final String name;
    private final int age;

    public Person(String name, int age) {
        this.name = name;
        this.age = age;
    }

    public String getName() {
        return name;
    }

    public int getAge() {
        return age;
    }
}
class ImmutableClassExample {
    public static void main(String[] args) {
        Person person = new Person("John Doe", 30);

        System.out.println("Name: " + person.getName());
        System.out.println("Age: " + person.getAge());
    } 
    }
        output:Name: John Doe
                      Age: 30


How to create Singleton Class in java?


public class Singleton {

      private static Singleton instance= new Singleton();

       private Singleton() {

            System.out.println("Hello, I am a singleton instance!");
        }
      public static Singleton getInstance() {
               return instance;
        }

       public static void main(String[] args) {

            Singleton instance1 = Singleton.getInstance();

            Singleton instance2 = Singleton.getInstance();

            Singleton instance3 = Singleton.getInstance();
       }
}
         output:-Hello, I am a singleton instance!


public class Singleton {
    private static Singleton instance;

    private Singleton() {
        // Private constructor to prevent direct instantiation
    }

    public static Singleton getInstance() {
        if (instance == null) {
            instance = new Singleton();
        }
        return instance;
    }

    public void showMessage() {
        System.out.println("Hello, I am a singleton instance!");
    }

    public static void main(String[] args) {
        Singleton instance1 = Singleton.getInstance();
        Singleton instance2 = Singleton.getInstance();

        // Both instances refer to the same singleton object
        System.out.println("Is instance1 the same as instance2? " + (instance1 == instance2));

        // Call a method on the singleton instance
        instance1.showMessage();
    }
}
     output:- Is instance1 the same as instance2? true
              Hello, I am a singleton instance!



Singleton Program using Double Check?

public class Singleton {
    private static Singleton instance;

    private Singleton() {
        System.out.println("this is singleton");
    }
    public static Singleton getInstance() {
      
               if(instance==null)
               {
                         synchronized(Singleton.class)
                      {
                         instance= new Singleton();
                      }
               }
        
        return instance;
    }
public static void main(String[] args)
{
    Singleton s=Singleton.getInstance();
      Singleton s1=Singleton.getInstance();
}
    // Other methods and properties of the Singleton class
}
     output:-this is singleton



program for finding numbers from list that starts with 1?

import java.util.*;
import java.util.stream.*;
public class HelloWorld {
    public static void main(String[] args) {
        List<Integer> list = Arrays.asList(123, 456, 178, 912, 32);
        List<Integer> number = list.stream()
            .filter(num -> String.valueOf(num).startsWith("1"))
            .collect(Collectors.toList());
        System.out.println(number);
    }
}       output:- [123,178]



program for printing duplicate elements from List?

import java.util.*;
import java.util.stream.*;
 
class Demo
{
    public static void main(String[] args)
    {    
         List<Integer>list=Arrays.asList(1,2,3,2,3,4,5,5,6,7,7,8,9);
        Set<Integer>set = new HashSet<>();
        list.stream().filter(x->!set.add(x)).collect(Collectors.toSet()).forEach(x->System.out.println(x));
    }
}        output:-2,3,5,7



program for printing duplicate characters from List?

import java.util.*;
import java.util.stream.*;
 
class Demo
{
    public static void main(String[] args)
    {    String str="amitrathodamit";
       List<String>list=Arrays.asList(str.split(""));
        Set<String>set = new HashSet<>();
        list.stream().filter(x->!set.add(x)).collect(Collectors.toSet()).forEach(x->System.out.println(x));
    }
}       output:-a t i m




program to count occurance of each character in String using java8?

import java.util.*;
import java.util.function.*;
import java.util.stream.*;
 
class Demo
{
    public static void main(String[] args)
    {      String str="amit rathod";
         List<String>list=Arrays.asList(str.split(""));
       Map<String,Long>map=list.stream().collect(Collectors.groupingBy(Function.identity(),Collectors.counting()));
       System.out.println(map);
       map.forEach((key,value)->System.out.println(key+"="+value));
    }
}    
     output:-{ =1, a=2, r=1, d=1, t=2, h=1, i=1, m=1, o=1}=1
       a=2
       r=1
       d=1
       t=2
       h=1
       i=1
       m=1
       o=1



program to count occurance of each word in String using java8?

import java.util.*;
import java.util.function.*;
import java.util.stream.*;
 
class Demo
{
    public static void main(String[] args)
    {      String str="amit rathod amit";
         List<String>list=Arrays.asList(str.split(" "));
       Map<String,Long>map=list.stream().collect(Collectors.groupingBy(Function.identity(),Collectors.counting()));
       System.out.println(map);
       map.forEach((key,value)->System.out.println(key+"="+value));
    }
}        output:-{amit=2, rathod=1}
                  amit=2
                  rathod=1



// Online Java Compiler
// Use this editor to write, compile and run your Java code online

class HelloWorld {
    public static void main(String[] args) {
String s="Hello";
s="World";

System.out.println(s);

    }
}
     output:- World

// Online Java Compiler
// Use this editor to write, compile and run your Java code online

class HelloWorld {
    public static void main(String[] args) {
System.out.println(10 + 20 + "Hello");   
System.out.println("Hello" + 10 + 20);  
    }
}
    output:- 30Hello
             Hello1020
   

program for counting occurance of substring in String

class HelloWorld {
    public static void main(String[] args) {
        String str = "ABCDCDCCDC";
        String substring = "CDC";

        int count = countSubstringOccurrences(str, substring);

        System.out.println("Substring: " + substring);
        System.out.println("Count: " + count);
    }

    private static int countSubstringOccurrences(String str, String substring) {
        return str.split(substring, -1).length - 1;
    
}
      output:- Substring: CDC
               Count: 2


program to count the occurance of substring

public class OccurenceOfSubstring {

    public static void main(String[] args) {

        // TODO Auto-generated method stub

        String str = "abccdcabc";//8

        String sub = "abc";//2

        int count = 0;
        int strLength = str.length();
"
        int subLength = sub.length();

        //5

        for (int i = 0; i <= strLength - subLength; i++) {

            if (str.substring(i, i + subLength).equals(sub)) {

                count++;
            }
        }

        System.out.println("Count of "+sub+" "+count);
    }
}      output:-Count of abc 2




Program for reversing the string in without java8?

public class ReverseString {

    public static void main(String[] args) {

        // TODO Auto-generated method stub

        String str="Hi I am Mayur";

        //4-3-2-1-0

        String[] strarr=str.split("");

        for(int i=strarr.length-1;i>=0;i--) {

            System.out.print(strarr[i]);

        }
    }
}       output:-  Mayur am I Hi

Program for reversing the string in with java8?

import java.util.*;

public class Demo {

    public static void main(String[] args) {

        String str = "Hi I am Mayur";
 
        List<String> st = Arrays.asList(str.split(" "));

        String rStr = st.stream()
                .reduce((l1, l2) -> l2 + " " + l1)
                .get();

        System.out.println(rStr);
        
      
    }
}       output:- Mayur am I Hi


program for reversing string ?

import java.util.*;
class HelloWorld {
    public static void main(String[] args) {
        String str="amit rathod";
        List<String> list=Arrays.asList(str.split(" "));
        Collections.reverse(list);
        System.out.println(list);
    }
}      output:- [rathod, amit]

program for reversing each character in string using java8?

import java.util.*;
import java.util.stream.*;
class HelloWorld {
    public static void main(String[] args) {
        String str="amit c Rathod";
        String abc= Arrays.asList(str).stream().map(s-> new StringBuffer(s).
        reverse().toString()).collect(Collectors.toList()).get(0);
        System.out.println(abc);
    }
}

     output:-dohtaR c tima

program for reversing each character in string using java8?

import java.util.*;
import java.util.stream.*;
 class Demo
{
    public static void main(String[] args)
    {    
     String str="amit c Rathod";
       List<String>list=Arrays.asList(str.split(" "));
     list.stream().map(a->new StringBuffer(a).reverse()).collect(Collectors.toList()).forEach(System.out::println);
    }
}       output:- tima
                  c
                 dohtaR



program for uppercase of first character in string with java8

public class CapitalizeFirstChar2 {

    public static void main(String[] args) {
        String str = "i am amit";
        // Output: I Am Amit
        String st = Arrays.stream(str.split(" "))
                .map(word -> Character.toUpperCase(word.charAt(0)) + word.substring(1))
                .collect(Collectors.joining(" "));

        System.out.println(st);
    }
}

    output:-I Am Amit


program for uppercase of first character in string with java8

import java.util.*;
import java.util.stream.*;

public class Temp {

public static void main(String[] args) {
	// TODO Auto-generated method stub
	String str="mayur khare";
	List<String> list = Arrays.asList(str.split(" "));
	String s = list.stream().map(c->Character.toUpperCase(c.charAt(0))+c.substring(1)).collect(Collectors.joining(" "));
		System.out.println(s);
       }
}

    output:-Mayur Khare



program for uppercase of first character in string without java8
 
public class CapitalizeFirstChar {

public static void main(String[] args) {

        // TODO Auto-generated method stub

       String str="how are you";

       System.out.print(Character.toUpperCase(str.charAt(0)));

       for(int i=1;i<str.length();i++) {

           if(str.charAt(i)==' ') {

               i=i+1;

               System.out.print(" "+Character.toUpperCase(str.charAt(i)));

               i=i+1;
           }

           System.out.print(str.charAt(i));
       }
                
    }
}                  output:-How Are You




program for natural sorting order?
 
import java.util.*;
import java.util.stream.*;
import java.util.Comparator;

public class ReverseStringExample {
    public static void main(String[] args) {
List<String>str= Arrays.asList("bathod","amit","chandrakant","rathod");
Type1 for same result:-    List<String>str2=str.stream().sorted(Comparator.naturalOrder()).collect(Collectors.toList());

Type2 for same result:-    List<String>str2=str.stream().sorted((a1,a2)->a1.compareTo(a2)).collect(Collectors.toList());

Type3 for same result:-    List<String>str2=str.stream().sorted().collect(Collectors.toList());
 
        System.out.println("Original List: " + str);
        System.out.println("Sorted List: " + str2);
    }

}
    output:-Original List: [bathod, amit, chandrakant, rathod]
            Sorted List: [rathod, chandrakant, bathod, amit]


program for reversing String sorting order?
 
import java.util.*;
import java.util.stream.*;
import java.util.Comparator;

public class ReverseStringExample {
    public static void main(String[] args) {
List<String>str= Arrays.asList("bathod","amit","chandrakant","rathod");
      Type1 for same result:-    List<String>str2=str.stream().sorted(Comparator.reverseOrder()).collect(Collectors.toList());
      Type2 for same result:-    List<String>str2=str.stream().sorted((a1,a2)->a2.compareTo(a1)).collect(Collectors.toList());
 
        System.out.println("Original List: " + str);
        System.out.println("Sorted List: " + str2);
    }

}

  Output:-Original List: [bathod, amit, chandrakant, rathod]
          Sorted List: [rathod, chandrakant, bathod, amit]




I have an array of words
eg ["Madhu", "anuja34", "Yusuf", "sanket", "Ajay12", null, ""]
use streams and return the words which are only alpahabets. do an upercase

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class Demo {
    public static void main(String[] args) {
        String[] words = {"Madhu", "anuja34", "Yusuf", "sanket", "Ajay12", null, ""};

        List<String> result = Arrays.stream(words)
                .filter(word -> word != null && !word.isEmpty() && word.matches("[a-zA-Z]+"))
                .map(String::toUpperCase)
                .collect(Collectors.toList());

        System.out.println("Filtered and Uppercased words: " + result);
    }
}
         output:- Filtered and Uppercased words: [MADHU, YUSUF, SANKET]




program to swap 2 string without using 3rd variable?

import java.util.*;
public class StringSwapExample {

    public static void main(String[] args) {
        String string1 = "Hello";
        String string2 = "World";

        System.out.println("Before swap:");
        System.out.println("String 1: " + string1);
        System.out.println("String 2: " + string2);

        // Swap using StringBuilder
        StringBuilder sb = new StringBuilder(string1);
        string1 = string2;
        string2 = sb.toString();

        System.out.println("After swap:");
        System.out.println("String 1: " + string1);
        System.out.println("String 2: " + string2);
    }
}

     output:-   Before swap:
                String 1: Hello
		String 2: World
		After swap:
		String 1: World
		String 2: Hello




program to find second highest number from list?

import java.util.*;

public class SecondHihest {

    public static void main(String[] args) {

        // TODO Auto-generated method stub

        List<Integer> list = Arrays.asList(4, 6, 8, 9, 0, 89);

        Optional<Integer> j = list.stream().sorted(Comparator.reverseOrder()).skip(1).findFirst();

        System.out.println(j); //optional

        int i = list.stream().sorted(Comparator.reverseOrder()).skip(1).findFirst().get();

        System.out.println(i); //int i
    }
}      output:-Optional[9]
               9



program to merge to Arraylist and display values that are unique and ascending order?

import java.util.*;

import java.util.stream.Collectors;

import java.util.stream.Stream;

public class ArrayListMerge {​​

    public static void main(String[] args) {​​

        // TODO Auto-generated method stub

        List<Integer> list1 = Arrays.asList(4, 5, 7, 4, 2, 7);

        List<Integer> list2 = Arrays.asList(65, 4, 7, 37, 6);

        List<List<Integer>> lol = List.of(list1, list2);

        List<Integer> res = lol.stream().flatMap(List::stream).sorted().distinct()

                .collect(Collectors.toList());

                System.out.println(res);

        List<Integer>li=Stream.concat(list1.stream(), list2.stream()).sorted().distinct()

                .collect(Collectors.toList());

                System.out.println(li);
    }​​
}​​

          output:-[2, 4, 5, 6, 7, 37, 65]

                  [2, 4, 5, 6, 7, 37, 65]




program to convert string into uppercase?

import java.util.Arrays;
import java.util.List;
public class ConvertToUpper {
   public static void main(String[] args) {
        // TODO Auto-generated method stub
        List<String>slist= Arrays.asList("Mayur","Khare");
        
        slist.stream().map(str->str.toUpperCase()).forEach(System.out::println);
   }
}

  output:-MAYUR
          KHARE
         

program for printing elements using Limit() and Skip() method using java8?

import java.util.*;

public class LimitAndSkipWithIntegerList {
    public static void main(String[] args) {
List<Integer> numbers = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);

        System.out.println("Printing the first 5 elements:");
        numbers.stream().limit(5).forEach(System.out::println);
             
        System.out.println("\nPrinting elements after skipping the first 3:");
        numbers.stream().skip(3).forEach(System.out::println);
    }
}
   output:-     Printing the first 5 elements:
                1
		2
		3
		4
		5

		Printing elements after skipping the first 3:4
		5
		6
		7
		8
		9
		10



program for getting even numbers from list and getting multiply by 2 ?


import java.util.*;
import java.util.stream.*;

public class Demo {
    public static void main(String[] args) {
List<Integer> num = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);

        List<Integer>li=num.stream().filter(i->i%2==0).collect(Collectors.toList());
        System.out.println("even numbers= "+li);
        
        List<Integer>lis=num.stream().map(i->i*2).collect(Collectors.toList()); 
        System.out.println("multiply by number 2 = "+lis);
        
        
    }
}           output:-	even numbers= [2, 4, 6, 8, 10]
			multiply by number 2 = [2, 4, 6, 8, 10, 12, 14, 16, 18, 20]




program for natural sorting order to string character?

import java.util.*;
import java.util.stream.*;

public class Demo {
    public static void main(String[] args) {
List<String> str = Arrays.asList("a","aaa","aa","aaaaa","aaaa");

        List<String>li=str.stream().sorted().collect(Collectors.toList());
        System.out.println("natural sorting order to string character= "+li);        
    }
}
           output:- natural sorting order to string character= [a, aa, aaa, aaaa, aaaaa]



interview question for polymorphism methodoveriding

class Employee 
{     
private String employeename;     
public Employee(String employeename) 
{         
this.employeename = employeename;    
 }    
 public String getEmployeename() 
{         
return employeename;     
}     
public void setEmployeename(String employeename) 
{         
this.employeename = employeename;     
} } 
class Manager extends Employee 
{     
private String managername; 
    
public Manager(String managername) 
{         
super(managername);         
this.managername = managername;    
 }     
public String getManagername() 
{         
return managername;     
}     
public void setManagername(String managername) 
{         
this.managername = managername;     
} } 
class A {     
public Manager Display() 
{         
return new Manager("amit");     
} } 
class B extends A {     
@Override     
public Employee Display() 
{         
return new Employee("anil");     
} } 
public class Main {     
public static void main(String[] args) {         
A a = new A();         
Manager managerFromA = a.Display();         
System.out.println(managerFromA.getManagername()); // Output: amit         
B b = new B();         
Employee employeeFromB = b.Display();         
System.out.println(employeeFromB.getEmployeename()); // Output: anil     
} }




program for avoiding null values using Optional?

import java.util.Arrays;
import java.util.List;
import java.util.Optional;

public class Demo {
    public static void main(String[] args) {
List<String> str = Arrays.asList("amiy","","","anil","amol",null);

str.stream()
.filter(val -> Optional.ofNullable(val).isPresent() && val!= null && !val.isEmpty())
.forEach(val -> System.out.println("Val: " + val));

str.forEach(valu -> Optional.ofNullable(valu).ifPresent(v -> System.out.println("Valu: " + v)));

for (String value : str) {
    if (value != null) {
        System.out.println("Value: " + value);
    }
    }
}}
 output:- 
Val: amiy
Val: anil
Val: amol

Valu: amiy
Valu: 
Valu: 
Valu: anil
Valu: amol

Value: amiy
Value: 
Value: 
Value: anil
Value: amol



/*Write a Java program to prepare dictionary using Collections framework for below city names.

Pune, Surat, Coimbatore, Bangalore, Bhopal, Ahmedabad, Kolkata, Delhi,   

Chandigarh, Chennai, Kannur, Ernakulam?

import java.util.Arrays;

import java.util.List;

import java.util.Map;

import java.util.TreeMap;

import java.util.stream.Collectors;

public class Dictionary {

    public static void main(String[] args) {

        // TODO Auto-generated method stub

        List<String>list= Arrays.asList("Pune","Surat","Coimbatore","Bangalore",

                "Bhopal","Ahmedabad","Kolkata","Delhi");

    Map<Character, List<String>>map= list.stream().sorted().collect(Collectors

            .groupingBy(city->city.charAt(0),TreeMap::new, Collectors.toList()));

    

    System.out.println(map);

    }
}        output:- {A=[Ahmedabad], B=[Bangalore, Bhopal], C=[Coimbatore], D=[Delhi], K=[Kolkata], P=[Pune], S=[Surat]}





unchecked exception in method overiding?

class CustomUncheckedException extends RuntimeException {

    public CustomUncheckedException(String message) {

        super(message);
    }
}

class Superclass {

    public void someMethod() {

        //int result = 10 / 0;

        System.out.println("Hi");

    }
}

class Subclass extends Superclass {

    @Override

    public void someMethod() {

        throw new CustomUncheckedException("Custom unchecked exception occurred");
    }
}

public class Main {

    public static void main(String[] args) {

        try {

            Superclass instance = new Superclass();

            instance.someMethod();

        } catch (CustomUncheckedException ex) {

            System.out.println("Custom unchecked exception handled: " + ex.getMessage());
        }
    }
}     output:- Hi



program to merge to integer list and get even number,multiply by 2, dont take duplicate number and print in decending order?

import java.util.ArrayList;

import java.util.Arrays;

import java.util.Comparator;

import java.util.List;

import java.util.stream.Collectors;

import java.util.stream.Stream;

public class MergeListAndOperation {

    public static void main(String[] args) {

        // TODO Auto-generated method stub

        List<Integer> l1 = Arrays.asList(5, 64, 3, 6, 7, 88);

        List<Integer> l2 = Arrays.asList(43, 4, 6, 4, 3, 90);

        // List<List<Integer>> list = List.of(l1,l2);

//        List<Integer> list = new ArrayList<>();

//        list.addAll(l2);

//        list.addAll(l1);

        // list.stream().filter(n->n%2==0).map(n->n*2).distinct().sorted();

//        List<Integer> collect = list.stream().filter(no -> no % 2 == 0).map(n -> n * 2).distinct()

//                .sorted((a1, a2) -> a2.compareTo(a1)).collect(Collectors.toList());

//        System.out.println(collect);//[180, 176, 128, 12, 8]

//        list.stream().flatMap(name->name.stream()).filter(n->n%2==0).map(n->n*2).distinct().sorted((a1,a2)->a2.compareTo(a1))

//        .forEach(n->System.out.print(n+" ")); //180 176 128 12 8

//        Stream.concat(l1.stream(), l2.stream()).filter(n->n%2==0).map(n->n*2).distinct().sorted((a1,a2)->a2.compareTo(a1))

        //.forEach(n->System.out.print(n+" ")); //180 176 128 12 8
    }
}


program for min and max from list?

import java.util.*;
class HelloWorld {
    public static void main(String[] args) {
      List<Integer>li=Arrays.asList(4, 8, 12, 16, 20, 24, 28, 112,19);
      Integer i=li.stream().min((l1,l2)->l1.compareTo(l2)).get();
  Object l=li.stream().max((l1,l2)->l1.compareTo(l2)).get();
     System.out.println("min="+i);
          System.out.println("max="+l);
    }
}
   output:=   min=4
              max=112


program to reverse linkedlist emements ?

import java.util.Arrays;
import java.util.Collections;
import java.util.LinkedList;
import java.util.List;

class Demo
{
	public static void main (String[] args)
	{
	List<Integer>list= new LinkedList<>(Arrays.asList(1,2,3,5,4,7,4));
	/*list.add(1);
	list.add(2);
	list.add(3);
	list.add(5);
	list.add(4);
	list.add(7);*/
	Collections.reverse(list);
	System.out.println(list);
	
	}
	} output:-[4, 7, 4, 5, 3, 2, 1]


import java.util.*;
public class Demo {
    public static void main(String[] args) {
     
        List<Integer> list = new ArrayList<>();
        list.add(1);
	list.add(2);
	list.add(3);
	list.add(5);
	list.add(4);
	list.add(7);
        Collections.reverse(list);
        System.out.println(list);
    }
}

output:- [7, 4, 5, 3, 2, 1]


program for first non repated character from string?

import java.util.*;
public class Demo {
    public static void main(String[] args) {
     String str="aabbfddgg";
     boolean ad=false;
     for(int i=0;i<str.length();i++)
     {
    if(str.indexOf(str.charAt(i))==str.lastIndexOf(str.charAt(i)))
         {
             System.out.println("first non repeating character is= "+str.charAt(i));
             ad=true;
            break;
         }
        }
        if(!ad)
        {
            System.out.println("no non repeating character found");
        }
    }
}
     output:-first non repeating character is= f


program for first non repated character from string using stream api?

import java.util.Arrays;
import java.util.List;
 public class Demo {
  public static void main(String[] args) {
    String input = "aabbddeeffc";
     List<String> list = Arrays.asList(input.split(""));
      String str = list.stream()
       .filter(i -> input.indexOf(i) == input.lastIndexOf(i))
       .findFirst().orElse("o");

   if(str!="o")
 {
    System.out.println("Non Repeated Character in This String is= "+str);
 }
   else{
    System.out.println("No norepeated character found");
       }
  }
}     output:- Non Repeated Character in This String is= c


program for seperating String and digit from List?

import java.util.*;
import java.util.stream.*;
import java.util.function.*;
public class Demo {
    public static void main(String[] args) {
        
        List<Object> mixedList = Arrays.asList("apple", 42, "banana", 7, "cherry", 15);
        
       List<String>strings = mixedList.stream().filter(element->element instanceof String)
	.map(element-> (String) element).collect(Collectors.toList());
       System.out.println(strings);
       
       List<Integer>number= mixedList.stream().filter(element->element instanceof Integer)
	.map(element-> (Integer) element).collect(Collectors.toList());
       System.out.println(number);
       
    }
}       output:- [apple, banana, cherry]
                 [42, 7, 15]



Program for custom checked exception without try catch block?

import java.io.*;
class Demo extends Exception
{
   Demo(String msg)
    {
        super(msg);
    }

    public static void main(String[] args) throws Demo
    {
       throw new Demo("Custome checked Exception");
    }
  }

output:-Exception in thread "main" Demo: Custome checked Exception
        at Demo.main(Demo.java:16)


Program for custom checked exception with try catch block?

import java.io.*;
class Demo extends Exception{
 Demo (String msg)
 {
     super(msg);
 }
 public static void main(String[] args)
 {
     try{
     throw new Demo("Custom Checked exception with try block");
     }
     catch (Demo d){
         System.out.println("Catch Block\n"+d.getMessage());
     }
 }
}  

    output:- Catch Block
             Custom Checked exception with try block


Program for custom unchecked exception with try catch block?

import java.io.*;
class Demo extends RuntimeException{
 Demo (String msg)
 {
     super(msg);
 }
 public static void main(String[] args)
 {
     try{
     throw new Demo("Custom UnChecked exception with try block");
     }
     catch (Demo d){
         System.out.println("Catch Block\n"+d.getMessage());
     }
 }
}  

    output:- Catch Block
             Custom UnChecked exception with try block



program for finding occurance of string by ignoring ignore case?
package MostImportant;

import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.function.Function;
import java.util.stream.Collectors;

public class FindOccuranceWord {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
       List<String> list = Arrays.asList("James","james","Foo","foo","Foo");
       
       Map<String, Long> collect = list.stream().map(String::toLowerCase)
    		   .collect(Collectors.groupingBy(Function.identity(),Collectors.counting()));
       
       
       System.out.println(collect);
	}
}              Output:- james 2
                        foo 3
    


normal Array Program?

 class HelloWorld {
    public static void main(String[] args) {
       int a[]={2,5,2,4,7,8,6,9};
       System.out.println(a[3]);
    }
 }        

 Static Array?

class HelloWorld {
    public static void main(String[] args) {
       int a[]= new int[5];
       a[0]=2;
       a[1]=3;
       a[2]=2;
       a[3]=5;
       a[4]=7;
       for(int i=0;i<5;i++)
       {
           System.out.println(a[i]);
       }
    }
}

 Dynamic Array?
 import java.util.*;
class HelloWorld {
    public static void main(String[] args) {
        int size;
        Scanner sc =new Scanner(System.in);
        System.out.println("Enter Size of Array");
        size=sc.nextInt();
       int a[]= new int[size];
       for(int i=0;i<size;i++)
       {
           a[i]=sc.nextInt();
       }
       System.out.println("Elements are Printed");
       for(int i=0;i<size;i++)
       {
             System.out.println(a[i]);
       }
    }
}       output:-Enter Size of Array
	5
	5
	4
	3
	2
	1
	Elements are Printed
	5
	4
	3
	2
	1

Print static Array Elements using forEach?

 class HelloWorld {
    public static void main(String[] args) {
       int a[]= new int[3];
       a[0]=3;
       a[1]=8;
       a[2]=5;
       for(int b:a)
       {
             System.out.println(b+" ");
       }
    }
}      output:- 3 
		8 
		5 

Java program to print array elements using Arrays class methods?
 import java.util.*;
class HelloWorld {
    public static void main(String[] args) {
       String a[]={"Learn","Coding","Keypoints","Education"};
       System.out.println("toString:-"+Arrays.toString(a));
        System.out.println("asList:-"+Arrays.asList(a));
        int ar[][]={{2,3},{5,6}};
         System.out.println("deepToString:-"+Arrays.deepToString(ar));
    }
}   outPut:- toString:-[Learn, Coding, Keypoints, Education]
	     asList:-[Learn, Coding, Keypoints, Education]
             deepToString:-[[2, 3], [5, 6]]
    

 Java program to find length of array?
  import java.util.*;
 class HelloWorld {
    public static void main(String[] args) {
       int a[]= new int[3];
       Scanner sc= new Scanner(System.in);
       System.out.println("Enter elements");
       for(int i=0;i<a.length;i++)
       {
           a[i]=sc.nextInt();
       }
       System.out.println("Print elements:-");
       for(int i=0;i<a.length;i++)
       {
           System.out.println(a[i]);
       }
       System.out.println("Array Length:-"+a.length);
    }
 }   output:-Enter elements
	3
	4
	5
	Print elements:-
	3
	4
	5
	Array Length:-3

Java program to print array elements in reverse order?
 import java.util.*;
class HelloWorld {
    public static void main(String[] args) {
       int a[]= new int[3];
       Scanner sc= new Scanner(System.in);
       System.out.println("Enter elements");
       for(int i=0;i<a.length;i++)
       {
           a[i]=sc.nextInt();
       }
       System.out.println("Print elements:-");
       for(int i=0;i<a.length;i++)
       {
           System.out.println(a[i]);
       }
      System.out.println("Reverse Array:-");
       for(int i=a.length-1;i>=0;i--)
       {
           System.out.println(a[i]);
       }
    }
}     output:-Enter elements
	12
	13
	14
	Print elements:-
	12
	13
	14
	Reverse Array:-
	14
	13
	12






public class MyFor{
public static void main(String argv[]){ 
    int i; 
    int j; 
    outer: 
    for (i=1;i < 3; i++) 
        inner: 
         for(j=1; j < 3; j++) { 
               if (j==2) 
               continue outer; 
               System.out.println("Value for i=" + i + " Value for j=" +j); 
                    } 
        } 
}
 output:- Value for i=1 Value for j=1
          Value for i=2 Value for j=1



Program for counting the length of the String without using length() function?

class HelloWorld {
    public static void main(String[] args) {
        String str="amit";
        
        System.out.println(str.toCharArray().length);
         System.out.println(str.lastIndexOf(""));
        System.out.println(str.split("").length);
        
        int i=0;
        for(char c:str.toCharArray())
        {
            i++;
        }
       System.out.println(i);
    }
}
    outPut:-	4
		4
		4
		4


program for giving sum of two numbers?

import java.util.Arrays;
public class Demo{
  public static void main(String[] args)
  {
  int arr[] = { 2, 11, 7, 15 };
        int tar = 9;

        for (int i = 0; i < arr.length; i++) {
            for (int j = i + 1; j < arr.length; j++) {
                if (arr[i] + arr[j] == tar) {
                    int[] a = { i, j };
                    System.out.println(Arrays.toString(a));
                }
        }

        }}
  }
       output:-[0,2]


Sum of All integer values from List?

import java.util.*;
import java.util.stream.*;
class parent {
  public static void main(String[] args) {
    List<Integer> li = Arrays.asList(2, 3, 4, 5);
List<Integer> list = li.stream().collect(Collectors.toList());
int sum = list.stream().mapToInt(Integer::intValue).sum();
System.out.println("Sum of all integers: " + sum);
    }
}
   output:- Sum of all integers: 14



store each character from string to ArrayList?
import java.util.*;
class HelloWorld {
    public static void main(String[] args) {
   String str ="Amit";
   List<Character>list= new ArrayList<>();
   for(char ch : str.toCharArray())
   {
     list.add(ch);
    }
    System.out.println(list);
}
}    output:- [A, m, i, t]


store each words from string to ArrayList?
import java.util.*;
class HelloWorld {
    public static void main(String[] args) {
   String str="amit c rathod";
   List<String>list= new ArrayList<>(Arrays.asList(str.split(" ")));
   System.out.println(list);
  }
}     output:-[amit, c, rathod]


//count each words length from ArrayList?
import java.util.*;
import java.util.stream.*;
import java.util.function.*;
class HelloWorld {
    public static void main(String[] args) {
   List<String>name= new ArrayList<>(Arrays.asList("amit","rathod","business"));
   //name.add("amit");
   //name.add("rathod");
   //name.add("business");
Map<String,Long>li=name.stream().collect(Collectors.toMap(na->na/*Function.identity()*/, na -> (long) na.length()));

   output:-{business=8, amit=4, rathod=6}